name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Linter-run:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
    - name: Super-Linter
      uses: super-linter/super-linter@v5.7.2
    
  Docker:
    name: Run Node
    runs-on: ubuntu-latest

    steps:
     - name: Checkout
       uses: actions/checkout@v4.1.1

     - name: Build and Push Docker Image
       id: docker_build
       uses: mr-smithers-excellent/docker-build-push@v4
       with:
        image: hussamgamal/node-img
        tag: v1
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  Terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest
    needs: Docker

    steps:
    - name: Checkout Terraform
      uses: actions/checkout@v4.1.1

    # Install the latest version of Terraform CLI
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.9
        
    - name: Initialize Terraform
      id: init
      run: |
        cd TerraformDocker
        terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: format
      run: terraform fmt -check
      continue-on-error: true
   
    - name: Terraform Validate
      run: |
        cd TerraformDocker
        terraform validate
   
    - name: Terraform Plan
      id: plan
      run: |
        cd TerraformDocker
        terraform plan

    - name: Terraform Apply
      run: |
        cd TerraformDocker
        terraform apply --auto-approve

    
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    
    - name: Apply Kubernetes Namespace
      run: kubectl apply -f TerraformDocker/Kubernetes/namespace.yaml
      shell: bash
    
    - name: Apply Kubernetes Deployment
      run: kubectl apply -f TerraformDocker/Kubernetes/deployment.yaml
      shell: bash

    - name: Apply Kubernetes Service
      run: kubectl apply -f TerraformDocker/Kubernetes/service.yaml
      shell: bash
    
    - name: Try the cluster
      run: |
        kubectl get deployment -n node
        kubectl get pods -n node -owide
        kubectl get svc -n node -owide
        sleep 100
        kubectl get deployment -n node
        kubectl get pods -n node -owide
        kubectl get svc -n node -owide
      shell: bash

    - name: Test service URLs
      run: |
          minikube service list
          minikube service node-app-service --url -n node
          minikube ip
          kubectl get events -n node
          kubectl describe service node-app-service -n node
          kubectl port-forward service/node-app-service 32626:80 -n node &
